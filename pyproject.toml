[tool.poetry]
name = "fastapi-onion-architecture"
version = "1.0.0"
description = ""
license = "MIT"
authors = ["Uoiferise <uoiferise@mail.ru>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = {extras = ["all"], version = "^0.108.0"}
sqlalchemy = "^2.0.24"
asyncpg = "^0.29.0"
alembic = "^1.13.1"
loguru = "^0.7.2"
black = "^23.12.1"
ruff = "^0.5.5"
greenlet = "^3.0.3"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.4"
pytest-asyncio = "^0.23.3"
pytest-dotenv = "^0.5.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
exclude = ["alembic/*", "tests/*"]
target-version = "py311"

[tool.ruff.lint]
select = ["ALL"]
extend-select = ["W", "E"]
preview = true
ignore = [
    "ANN001", # Missing type annotation for function argument
    "ANN002", # Missing type annotation for `*args`
    "ANN003", # Missing type annotation for `**kwargs`
    "ANN201", # Missing return type annotation for public function
    "ANN202", # Missing return type annotation for private function
    "ANN204", # Missing return type annotation for special method
    "ANN401", # Dynamically typed expressions are disallowed

    "B008", # Do not perform function call `Depends` in argument defaults
    "B904", # Within an `except` clause, raise exceptions with `raise`
    "BLE001", # Do not catch blind exception: `Exception`

    "CPY001", # Missing copyright notice at top of file

    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in `__init__`
    "D203", # One blank line before class
    "D213", # Multi line summary second line
    "D415", # First line should end with a period, question mark, or exclamation point

    "FAST002", # FastAPI dependency without `Annotated`
    "I001", # Import block is un-sorted or un-formatted
    "INP001", # File is part of an implicit namespace package
    "N802", # Function name should be lowercase
    "N816", # Variable in global scope should not be mixedCase
    "RET504", # Unnecessary assignment before `return` statement
    "RET505", # Unnecessary `else` after `return` statement
    "TCH001", # Move application import into a type-checking block
    "TCH002", # Move third-party import into a type-checking block
    "UP035", # Import from `collections.abc` instead: `Sequence`
]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.pylint]
max-args = 7